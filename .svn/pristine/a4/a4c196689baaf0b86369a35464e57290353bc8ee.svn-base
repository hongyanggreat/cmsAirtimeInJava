/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.htc.airtime.servlet.demoAirTime;

import com.htc.airtime.components.Helper;
import com.htc.airtime.components.MyDate;
import com.htc.airtime.components.RequestTool;
import com.htc.airtime.components.Tool;
import com.htc.airtime.dao.ChargeOnlineDAO;
import com.htc.airtime.model.Account;
import com.htc.airtime.model.ChargeOnline;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import static org.apache.commons.lang.StringUtils.isNumeric;

/**
 *
 * @author Company
 */
@WebServlet(name = "uploadFilePhone_", urlPatterns = {"/uploadFilePhone_"})
//@MultipartConfig
public class UploadFile5 extends HttpServlet {

    private static final long serialVersionUID = 1L;

    // location to store file uploaded
    private static final String UPLOAD_DIRECTORY = "E:/test/";

    // upload settings
    private static final int MEMORY_THRESHOLD = 1024 * 1024 * 1;  // 3MB
    private static final int MAX_FILE_SIZE = 1024 * 1024 * 1; // 40MB
    private static final int MAX_REQUEST_SIZE = 1024 * 1024 * 1; // 50MB

    protected void processRequest(HttpServletRequest request, HttpServletResponse response) {
        response.setContentType("text/html;charset=UTF-8");
        try {
            String phoneNumber = "";
            HttpSession session = request.getSession();
            //KIEM TRA DA DANG NHAP CHUA 
            int idUser = 0;
            if (Tool.checkNull(session.getAttribute("acc"))) {
                response.sendRedirect(request.getContextPath() + "/");
                return;
            }
            session.setAttribute("mess", "Thêm thất bại");
            Account acc = (Account) session.getAttribute("acc");
            idUser = acc.getAccId();
            PrintWriter out = response.getWriter();
            boolean isMultipart = ServletFileUpload.isMultipartContent(request);
            if (isMultipart) {
                // Create a factory for disk-based file items
                DiskFileItemFactory factory = new DiskFileItemFactory();
                // Configure a repository (to ensure a secure temp location is used)
                ServletContext servletContext = this.getServletConfig().getServletContext();
                File repository = (File) servletContext.getAttribute("javax.servlet.context.tempdir");
                factory.setRepository(repository);

                // Create a new file upload handler
                ServletFileUpload upload = new ServletFileUpload(factory);

//              Parse the request
                if (upload == null) {
                    System.out.println("bi null");
                } else {
                    ChargeOnlineDAO chargeOnline = new ChargeOnlineDAO();
                    chargeOnline.deleteByAcc(idUser);
                    
                    List<FileItem> items = upload.parseRequest(request);
//
//                // Process the uploaded items
                    Iterator<FileItem> iter = items.iterator();
                    ChargeOnline dataTmp = new ChargeOnline();
                    //SET THEM 1 SO THUOC TINH KHAC
                    dataTmp.setStatus(0);
                    dataTmp.setCreateBy(idUser);
                    dataTmp.setOpt("");
                    String filePath = "";
                    while (iter.hasNext()) {
                        FileItem item = iter.next();

                        String user = "";
                        String cpCode = "";
                        String cpGame = "";
                        String price = "";
                        String accesskey = "";

                        if (item.isFormField()) {
                            System.out.println("++++++++++ CO VAO DAY KHONG  isFormField");
                            String name = item.getFieldName();
                            String value = item.getString();
                            System.out.println(name + " : " + value);

                            if (name.equals("user") && !value.equals("all") && !Tool.checkNull(value)) {
                                user = value;
                                dataTmp.setUserName(user);
                            }
                            if (name.equals("cpCode") && !value.equals("all") && !Tool.checkNull(value)) {
                                cpCode = value;
                                dataTmp.setCpCode(cpCode);
                            }
                            if (name.equals("cpGame") && !value.equals("all") && !Tool.checkNull(value)) {
                                cpGame = value;
                                dataTmp.setGameCode(cpGame);
                            }
                            if (name.equals("price") && !Tool.checkNull(value)) {
                                price = value;
                                dataTmp.setPrice(price);
                            }
                            if (name.equals("accesskey") && !Tool.checkNull(value)) {
                                accesskey = value;
                                dataTmp.setAccessKey(accesskey);
                            }
                            if (name.equals("phoneNumber") && !Tool.checkNull(value)) {
                                
                                // NEU CO SO DIEN THOAI THI MOI ADD
                                phoneNumber = value;
                                //====================== ADD 1 so vao co so du lieu
                                System.out.println("=======================phoneNumber la: " + phoneNumber);
                                if (!Tool.checkNull(phoneNumber)) {
                                    System.out.println("THEM LE 1 so vao co so du lieu truoc khi them 1 list danh sach");
                                    phoneNumber = Helper.builPhone84(phoneNumber);
                                    dataTmp.setMisidn(phoneNumber);
                                    ChargeOnlineDAO dt = new ChargeOnlineDAO();
                                    dt.add(dataTmp);
                                    session.setAttribute("mess", "Thêm số điện thoại thành công");
                                }
                            }
                        } else {
                            System.out.println("++++++++++ CO VAO DAY KHONG !!!! isFormField");
                            String fieldName = item.getFieldName();
                            String fileName = item.getName();
                            String contentType = item.getContentType();
                            boolean isInMemory = item.isInMemory();
                            long sizeInBytes = item.getSize();
                            String mimeType = getServletContext().getMimeType(fileName);
//                            System.out.println("fieldName:" + fieldName);
//                            System.out.println("fileName:" + fileName);
//                            System.out.println("contentType:" + contentType);
//                            System.out.println("sizeInBytes:" + sizeInBytes);
//                            System.out.println("mimeType:" + mimeType);

//                            if (sizeInBytes <= 0) {
//                                System.out.println("KHONG CO FILE UPLOAD");
//                                response.sendRedirect(request.getContextPath() + "/admin/contract/");
//                                return;
//                            }
                            if (sizeInBytes > MAX_FILE_SIZE) {
                                response.sendRedirect(request.getContextPath() + "/charging");
                                request.setAttribute("mes", "Upload thất bại");
                                System.out.println("VUOT QUA MAX_FILE_SIZE:" + MAX_FILE_SIZE);
                                return;
                            }
                            if (!contentType.equals("text/plain")) {
                                request.setAttribute("mes", "Upload thất bại");
                                response.sendRedirect(request.getContextPath() + "/charging");
                                System.out.println("Khac contentType:text/plain");
                                return;
                            }
                            String itemName = item.getName();
                            fileName = itemName.substring(itemName.lastIndexOf("\\") + 1);
                            String RealPath = getServletContext().getRealPath("/") + "uploads/file-charging/";
//                             RealPath = UPLOAD_DIRECTORY + fileName;
                            filePath = RealPath + MyDate.getStringDate("", "", "-", "", "") + "-" + fileName;
                            System.out.println("filePath:" + filePath);

                            //=================== UPLOAD FILE ======================
                            File savedFile = new File(filePath);

                            item.write(savedFile);

                        }
                    }

                    //==================== SAU KHI UPLOAD FILE XONG TA DOC FILE DO LEN
                    BufferedReader br = null;
                    FileReader fr = null;

                    try {
                        //br = new BufferedReader(new FileReader(FILENAME));
                        fr = new FileReader(filePath);
                        br = new BufferedReader(fr);

                        String sCurrentLine;

                        while ((sCurrentLine = br.readLine()) != null) {
                            sCurrentLine = sCurrentLine.trim();
                            if (!Tool.checkNull(sCurrentLine) && isNumeric(sCurrentLine) && Helper.validPhoneViettel84(sCurrentLine)) {
                                //========IN GIA TRI FIELD TRONG FORM 
                                sCurrentLine = Helper.builPhone84(sCurrentLine);
                                dataTmp.setMisidn(sCurrentLine);

                                System.out.println("++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
                                System.out.println("-------------------filePath:" + filePath);
                                System.out.println("-------------------getUserName:" + dataTmp.getUserName());
                                System.out.println("-------------------getCpCode:" + dataTmp.getCpCode());
                                System.out.println("-------------------getGameCode:" + dataTmp.getGameCode());
                                System.out.println("-------------------getPrice:" + dataTmp.getPrice());
                                System.out.println("-------------------getAccessKey:" + dataTmp.getAccessKey());
                                System.out.println("-------------------getMisidn:" + dataTmp.getMisidn());
                                System.out.println("-------------------getStatus:" + dataTmp.getStatus());
                                System.out.println("-------------------getCreateBy:" + dataTmp.getCreateBy());
                                System.out.println("++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
                                ChargeOnlineDAO dt = new ChargeOnlineDAO();
                                dt.add(dataTmp);
                                session.setAttribute("mess", "Thêm danh sách số điện thoại thành công");
                            }
                        }
                        response.sendRedirect(request.getContextPath() + "/charging");
                        return;
                    } catch (IOException e) {

                        e.printStackTrace();

                    } finally {
                        try {
                            if (br != null) {
                                br.close();
                            }

                            if (fr != null) {
                                fr.close();
                            }
                        } catch (IOException ex) {

                            ex.printStackTrace();
                            request.setAttribute("mes", "Thêm danh sách số điện thoại thành công");
                            response.sendRedirect(request.getContextPath() + "/charging");
                            return;
                        }

                    }
                }

            } else {
                System.out.println("LOI KHONG CO MultipartContent");
                request.setAttribute("mes", "Thêm danh sách số điện thoại thành công");
                response.sendRedirect(request.getContextPath() + "/charging");
                return;
            }
        } catch (Exception ex) {
            System.out.println("loi:" + ex.getStackTrace());
            request.setAttribute("mes", "Thêm danh sách số điện thoại thành công");
            try {
                response.sendRedirect(request.getContextPath() + "/charging");
            } catch (IOException ex1) {
                Logger.getLogger(UploadFile5.class.getName()).log(Level.SEVERE, null, ex1);
            }
            return;
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
